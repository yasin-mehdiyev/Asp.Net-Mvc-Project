@model Medway_Pratice.Models.Blog

@{
    ViewBag.Title = "Edit";
}

<div class="main-panel">
    <div class="content">

        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <h2>Edit</h2>

                    @using (Html.BeginForm("edit","blogs",FormMethod.Post,new { @enctype= "multipart/form-data" }))
    {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control", @type = "file" } })
                            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                            <img style="margin-top:10px;" src="~/Uploads/@Model.Photo" width="250" alt="@Model.Title" />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Date, "", new { htmlAttributes = new { @class = "form-control", @type = "date",@value=Model.Date } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Text, new { @class = "form-control", @id = "editor" })
                            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
}

                    <div>
                        <a class="btn btn-outline-primary" href="@Url.Action("index")">Əvvəlki səhifəyə qayıt</a>
                    </div>


                </div>
                </div>
            </div>
        </div>
    </div>










                  
